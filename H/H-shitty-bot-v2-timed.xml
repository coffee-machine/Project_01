<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
//int maxX = 3;
//int maxY = 3;
//int numFaces = 4;

clock timer;
clock totalTime;

int totalTurns;
int totalForwards;

bool visited[3][3];
int rules[3][3][4];
bool didVisit;

int robotPosX;
int robotPosY;
int robotFacing;

int turn() {
	if(robotFacing == 3) {
		robotFacing = 0;
		totalTurns++;
		return robotFacing;
	}
	else {
		robotFacing++;
		totalTurns++;
		return robotFacing;
	}
}

void forward() {
	if(robotFacing == 0) { //robot faces north, increase y
		robotPosY = robotPosY + 1;
		totalForwards++;
	}
	else if(robotFacing == 1) { //robot faces east, increase x
		robotPosX = robotPosX + 1;
		totalForwards++;
	}
	else if(robotFacing == 2) { //robot faces south, decrease y
		robotPosY = robotPosY - 1;
		totalForwards++;
	}
	else { //robot faces west, decrease x
		robotPosX = robotPosX - 1;
		totalForwards++;
	}
}

bool outOfBounds() {
	if(robotFacing == 0 &amp;&amp; (robotPosY + 1) &gt; 2) {
		return true;
	}
	else if(robotFacing == 1 &amp;&amp; (robotPosX + 1) &gt; 2) {
		return true;
	}
	else if(robotFacing == 2 &amp;&amp; (robotPosY - 1) &lt; 0) {
		return true;
	}
	else if(robotFacing == 3 &amp;&amp; (robotPosX - 1) &lt; 0) {
		return true;
	}
	else {
		return false;
	}
}

bool allVisited() {
	int i;
	int j;
	for(i=0; i&lt;3; i++) {
		for(j=0;j&lt;3;j++) {
			if(visited[i][j] != 1) {
				return false;
			}
		}
	}
	return true;
}
</declaration>
	<template>
		<name x="5" y="5">Template</name>
		<declaration>// Place local declarations here.
//clock turnTime;
//clock forwardTime;

void firstinit() {
	robotPosX = 0;
	robotPosY = 0;
	robotFacing = 0;
	visited[robotPosX][robotPosY] = true;
	rules[0][0][0] = 1;
	//rules[0][1][0] = 1;
	//rules[0][2][0] = 2;
	//rules[0][2][1] = 1;
}</declaration>
		<location id="id0" x="-17544" y="-93">
			<label kind="invariant" x="-17569" y="-127">timer &lt;= 5</label>
		</location>
		<location id="id1" x="-17569" y="-153">
			<label kind="invariant" x="-17578" y="-195">timer &lt;= 1</label>
		</location>
		<location id="id2" x="-17357" y="-110">
		</location>
		<location id="id3" x="-17640" y="-56">
			<name x="-17629" y="-51">forwarding</name>
		</location>
		<location id="id4" x="-17640" y="24">
			<name x="-17620" y="17">not_out_of_bounds</name>
		</location>
		<location id="id5" x="-17688" y="-110">
			<name x="-17731" y="-127">turning</name>
		</location>
		<location id="id6" x="-17025" y="-110">
		</location>
		<location id="id7" x="-17068" y="-68">
		</location>
		<location id="id8" x="-17024" y="144">
		</location>
		<location id="id9" x="-17360" y="144">
			<name x="-17348" y="153">robot_decision</name>
		</location>
		<location id="id10" x="-17688" y="144">
			<name x="-17790" y="136">decide_action</name>
		</location>
		<location id="id11" x="-17360" y="208">
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="guard" x="-17484" y="-102">timer == 5</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-17518" y="-161">timer == 1</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id9"/>
			<label kind="assignment" x="-17493" y="-68">visited[robotPosX][robotPosY] = true</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="assignment" x="-17629" y="-93">forward(),
timer = 0</label>
			<nail x="-17569" y="-68"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id1"/>
			<label kind="assignment" x="-17671" y="-161">turn(),
timer = 0</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="assignment" x="-17632" y="-24">rules[robotPosX][robotPosY][robotFacing] = 1</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id5"/>
			<label kind="assignment" x="-17994" y="34">rules[robotPosX][robotPosY][robotFacing] = 2</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id4"/>
			<label kind="guard" x="-17648" y="64">!outOfBounds()</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id2"/>
			<label kind="assignment" x="-17102" y="-144">turn()</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id2"/>
			<label kind="assignment" x="-17161" y="-68">forward()</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id6"/>
			<label kind="guard" x="-17297" y="59">rules[robotPosX][robotPosY][robotFacing] == 2</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="guard" x="-17348" y="17">rules[robotPosX][robotPosY][robotFacing] == 1</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="-17344" y="120">rules[robotPosX][robotPosY][robotFacing] != 0</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id9"/>
			<label kind="assignment" x="-17416" y="168">firstinit()</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="guard" x="-17664" y="120">rules[robotPosX][robotPosY][robotFacing] == 0</label>
			<nail x="-17646" y="144"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
Process = Template();

// List one or more processes to be composed into a system.
system Process;</system>
	<queries>
		<query>
			<formula>E&lt;&gt; allVisited() 
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; robotPosX == 0 &amp;&amp; robotPosY == 0 &amp;&amp; robotFacing == 0 &amp;&amp; visited[0][0] == true &amp;&amp; visited[0][1] == true &amp;&amp; visited[0][2] == true &amp;&amp; visited[1][0] == true &amp;&amp; visited[2][0] == true &amp;&amp; visited[1][1] == true &amp;&amp; visited[2][1] == true &amp;&amp; visited[1][2] == true &amp;&amp; visited[2][2] == true
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; allVisited() == true &amp;&amp; robotPosX == 0 &amp;&amp; robotPosY == 0 &amp;&amp; robotFacing == 0
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
