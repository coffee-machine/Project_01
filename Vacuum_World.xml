<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
//int grid[3][3] = {(0,0), (0,1), (0,2), (1,0), (1,1), (1,2), (2,0), (2,1), (2,2)};
bool hasVisited[3][3];
int pos[3][3][5];
int Robot = 8;
int board[3][3];
int x = 0, y = 0, direction;
const int NORTH = 1, EAST = 2, SOUTH = 3, WEST = 4;
const int FORWARD = 1, TURN = 2, SUCK = 3;

//The initial pos of robot, should also be the final pos
bool initialPos(){
    if(pos[0][0][NORTH]){
        return true;
    }
    return false;
}

int start(){
    x = 0;
    y = 0;
    hasVisited[0][0] = true;
    direction = NORTH;
    return pos[x][y][direction] = Robot;
}

bool allGridsVisited(){
    int i, j;
    for(i = 0; i &lt; 3; i++) {
        for(j = 0; j &lt; 3; j++) {
            if(hasVisited[i][j] != true) {
                return false;
            }
        }
    }
    return true;
}

void updatePos(int x, int y, int directionIn){
    direction = directionIn;
    pos[x][y][directionIn] = Robot;
    hasVisited[x][y] = true;
}

void Do(int action) { //What action the Robot should do.
    if(action == FORWARD) { //forward
        if(direction == NORTH) { //north
            if(y &lt; 2){
                y++;
                updatePos(x, y, NORTH);
            }
        }
        else if(direction == EAST) { //east
            if(x &lt; 2){
                x++;
                updatePos(x, y, EAST);
            }
        }
        else if(direction == SOUTH) { //south
            if(y &gt; 0){
                y--;
                updatePos(x, y, SOUTH);
            }
        }
        else if(direction == WEST) { //west
            if(x &gt; 0){
                x--;
                updatePos(x, y, WEST);
            }
        }
    }
    else if(action == TURN) { //turn
        if(direction == NORTH){
            direction = EAST;
            updatePos(x, y, direction);
        }
		else if(direction == EAST) {
            direction = SOUTH;
            updatePos(x, y, direction);
        }
        else if(direction == SOUTH) {
            direction = WEST;
            updatePos(x, y, direction);
        }
        else if(direction == WEST){
            direction = NORTH;
            updatePos(x, y, direction);
        }        
    }
    else if(action == SUCK) { //suck
        
    }
}

int Facing(int direction){ //What direction the Robot is facing.
    if(direction == NORTH) { //north, pos = 0
        return NORTH;
    }
    else if(direction == EAST) { //east, pos = 1
        return EAST;
    }
    else if(direction == SOUTH) { //south, pos = 2
        return SOUTH;
    } 
    else if(direction == WEST) { //west, pos = 3
        return WEST;
    }

    return 0;
}

bool Dirt(int x, int y) { //Where there is dirt at.
    return true;
}

void In(int x, int y) { //Where the Robot is at.
    pos[x][y][direction] = Robot;
}

bool isLegal(int x, int y, int direction) {
    if(x == 0 &amp;&amp; y == 2 &amp;&amp; (direction == NORTH || direction == WEST)){
        return false;
	}
    else if(x == 2 &amp;&amp; y == 2 &amp;&amp; (direction == EAST || direction == NORTH)) {
        return false;
    }
    else if(x == 2 &amp;&amp; y == 0 &amp;&amp; (direction == SOUTH || direction == EAST)) {
        return false;
    }
    else if(x == 0 &amp;&amp; y == 0 &amp;&amp; (direction == WEST || direction == SOUTH)) {
        return false;
    }

    return true;
}</declaration>
	<template>
		<name x="5" y="5">Template</name>
		<declaration>// Place local declarations here.</declaration>
		<location id="id0" x="42" y="-144" color="#ffc0cb">
			<name x="59" y="-153">START</name>
		</location>
		<location id="id1" x="-119" y="-186">
		</location>
		<location id="id2" x="340" y="-297" color="#ff0000">
			<name x="348" y="-331">ILLEGAL</name>
		</location>
		<location id="id3" x="-238" y="-297" color="#00ff00">
			<name x="-229" y="-323">LEGAL</name>
		</location>
		<location id="id4" x="68" y="85">
		</location>
		<location id="id5" x="-238" y="-84">
		</location>
		<location id="id6" x="229" y="-84">
		</location>
		<location id="id7" x="-17" y="-297">
		</location>
		<location id="id8" x="-17" y="-85">
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id1"/>
			<target ref="id8"/>
			<label kind="assignment" x="-93" y="-195">Do(TURN)</label>
			<label kind="comments" x="-110" y="-212">Turn 90 deg</label>
			<nail x="-42" y="-170"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id8"/>
			<label kind="assignment" x="17" y="-119">start()</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id8"/>
			<label kind="assignment" x="-204" y="-136">Do(FORWARD)</label>
			<label kind="comments" x="-195" y="-153">Go Forward</label>
			<nail x="-102" y="-119"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id2"/>
			<label kind="guard" x="-161" y="9">!isLegal(x, y, WEST)</label>
			<nail x="-289" y="-84"/>
			<nail x="-289" y="9"/>
			<nail x="340" y="9"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id6"/>
			<label kind="assignment" x="263" y="-178">Do(TURN)</label>
			<label kind="comments" x="280" y="-161">Turn</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id7"/>
			<label kind="assignment" x="255" y="-365">Do(TURN)</label>
			<label kind="comments" x="255" y="-382">Turn</label>
			<nail x="340" y="-339"/>
			<nail x="-17" y="-339"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id2"/>
			<label kind="guard" x="77" y="34">!isLegal(x, y, SOUTH)</label>
			<nail x="68" y="9"/>
			<nail x="340" y="9"/>
			<nail x="340" y="-195"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="assignment" x="204" y="85">Do(TURN)</label>
			<label kind="comments" x="221" y="68">Turn</label>
			<nail x="382" y="-297"/>
			<nail x="382" y="85"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id1"/>
			<label kind="comments" x="-170" y="-255">!Dirt(x, y)</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id5"/>
			<label kind="assignment" x="162" y="136">Do(TURN)</label>
			<label kind="comments" x="162" y="119">Turn</label>
			<nail x="433" y="-297"/>
			<nail x="433" y="136"/>
			<nail x="-238" y="136"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id3"/>
			<label kind="guard" x="-25" y="-391">isLegal(x, y, EAST)</label>
			<nail x="229" y="-365"/>
			<nail x="-238" y="-365"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="-170" y="187">isLegal(x, y, SOUTH)</label>
			<nail x="68" y="179"/>
			<nail x="-331" y="179"/>
			<nail x="-331" y="-339"/>
			<nail x="-238" y="-339"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id2"/>
			<label kind="guard" x="238" y="-84">!isLegal(x, y, EAST)</label>
			<nail x="340" y="-84"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id2"/>
			<label kind="guard" x="51" y="-297">isLegal(x, y, NORTH) == false</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id3"/>
			<label kind="guard" x="-297" y="-204">isLegal(x, y, WEST)</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id3"/>
			<label kind="guard" x="-221" y="-297">isLegal(x, y, NORTH) == true</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id4"/>
			<label kind="guard" x="-8" y="-34">direction == SOUTH</label>
			<label kind="comments" x="-119" y="-33">Facing South</label>
			<nail x="-17" y="85"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id5"/>
			<label kind="guard" x="-178" y="-84">direction == WEST</label>
			<label kind="comments" x="-170" y="-101">Facing West</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id6"/>
			<label kind="guard" x="60" y="-84">direction == EAST</label>
			<label kind="comments" x="68" y="-110">Facing East</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="guard" x="-8" y="-195">direction == NORTH</label>
			<label kind="comments" x="-8" y="-212">Facing North</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
Process = Template();
// List one or more processes to be composed into a system.
system Process;
    </system>
	<queries>
		<query>
			<formula>E&lt;&gt; (allGridsVisited() == true &amp;&amp; initialPos() == true)
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
